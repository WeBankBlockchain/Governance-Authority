buildscript {
    ext {
        springBootVersion = '2.1.2.RELEASE'
    }
    repositories {
        mavenCentral()
        mavenLocal()

    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
     //   classpath 'com.webank:solc-gradle-plugin:1.0-SNAPSHOT'
    }
}

apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: 'eclipse'
//apply plugin: 'solc-gradle-plugin'

sourceCompatibility = 1.8
targetCompatibility = 1.8

group = 'com.webank'
version = '0.0.1-SNAPSHOT'

/*
solc{
    pkg = 'com.webank.authmanager.contract'
}

*/


repositories {
    maven { url "http://maven.aliyun.com/nexus/content/groups/public/"}
    maven { url "https://oss.sonatype.org/content/repositories/snapshots" }
    maven { url "https://dl.bintray.com/ethereum/maven/" }
    mavenLocal()
    mavenCentral()
}

def log4j_version="2.15.0"
List logger = [
        "org.apache.logging.log4j:log4j-api:$log4j_version",
        "org.apache.logging.log4j:log4j-to-slf4j:$log4j_version",
]

dependencies {
    compile logger
    compile 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    testCompileOnly 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testCompile('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        //exclude group: 'junit', module: 'junit'
    }
    compile ('org.fisco-bcos.java-sdk:java-sdk:2.7.0') {
        exclude group: 'org.slf4j'
    }

}

test {
    useJUnitPlatform()
}

sourceSets {
    main {
        java {
            srcDir 'src/main/java'
        }
        resources  {
            srcDir 'src/main/resources'
        }
    }
}

jar {
    enabled = true
    destinationDir file('dist')
    archiveName project.name + '.jar'
    exclude '**/*.xml'
    exclude '**/*.properties'
    exclude '**/*.yml'
    //exclude '**/spring.factories'
    from {

    }
    doLast {
        copy {
            from file('src/main/resources/')
            into 'dist/config'
        }
        copy {
            from configurations.runtime
            into 'dist/lib'
        }
    }
}

clean {
    println "delete ${projectDir}/dist"
    delete "${projectDir}/dist"
}

